/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mousebird_maply_ParticleSystem */

#ifndef _Included_com_mousebird_maply_ParticleSystem
#define _Included_com_mousebird_maply_ParticleSystem
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setName
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setName
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    getID
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_mousebird_maply_ParticleSystem_getID
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setParticleSystemTypeNative
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setParticleSystemTypeNative
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setPositionShaderID
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setPositionShaderID
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setRenderShaderID
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setRenderShaderID
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setLifetime
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setLifetime
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setBasetime
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setBasetime
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    getBasetime
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_mousebird_maply_ParticleSystem_getBasetime
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setTotalParticles
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setTotalParticles
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    getTotalParticles
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_mousebird_maply_ParticleSystem_getTotalParticles
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setBatchSize
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setBatchSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    getBatchSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_mousebird_maply_ParticleSystem_getBatchSize
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setContinuousUpdate
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setContinuousUpdate
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setDrawPriority
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setDrawPriority
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setPointSize
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setPointSize
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    addAttributeNative
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_addAttributeNative
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    addVaryingNative
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_addVaryingNative
  (JNIEnv *, jobject, jstring, jstring, jint);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    addTextureID
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_addTextureID
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setZBufferRead
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setZBufferRead
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setZBufferWrite
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setZBufferWrite
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    setRenderTargetNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_setRenderTargetNative
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    nativeInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    initialise
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_initialise
  (JNIEnv *, jobject);

/*
 * Class:     com_mousebird_maply_ParticleSystem
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mousebird_maply_ParticleSystem_dispose
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
